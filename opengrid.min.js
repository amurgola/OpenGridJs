class OpenGrid{loadMoreDataFunction=null;canLoadMoreData=!0;isLoadingMoreData=!1;loadedAtGridHeight=[];constructor(e,t,i,a,r=null){this.className=e,this.sortState={column:null,direction:null},this.gridData=[],this.headerData=[],this.gridRowPxSize=35,this.gridRowPxVisibleArea=i,this.gridSelectedObject={},this.contextMenuItems=a.contextMenuOptions,this.contextMenuTitle=a.contextMenuTitle,this.loadMoreDataFunction=r,this.rootElement=document.querySelector(`.${e}`),this.rootElement.gridInstance=this,this.rootElement.classList.add("opengridjs-grid"),"function"==typeof t?t().then((e=>{this.originalData=JSON.parse(JSON.stringify(e)),e.length>0&&(this.gridColumnNames=Object.keys(e[0]).map((e=>({headerName:e,field:e})))),this.initGrid(),this.processData(e),this.generateGridHeader(a),this.generateGridRows(),this.addEventListeners(a)})):(this.originalData=JSON.parse(JSON.stringify(t)),t.length>0&&(this.gridColumnNames=Object.keys(t[0]).map((e=>({headerName:e,field:e})))),this.initGrid(),this.processData(t),this.generateGridHeader(a),this.generateGridRows(),this.addEventListeners(a))}debounce(e,t){let i;return function(){const a=this,r=arguments;clearTimeout(i),i=setTimeout((()=>e.apply(a,r)),t)}}initGrid(){this.rootElement.classList.add("opengridjs-grid-container"),this.rootElement.innerHTML="\n        <div class='opengridjs-grid-additional'></div>\n        <div class='opengridjs-grid-header'></div>\n        <div class='opengridjs-grid-rows-container'></div>"}processData(e){this.gridData=e.map(((e,t)=>({data:e,position:t*this.gridRowPxSize,isRendered:!1}))),this.sortData(),this.createContextMenu(this.contextMenuItems)}generateGridHeader(e,t){const i=this.rootElement.querySelector(".opengridjs-grid-header");if(i.setAttribute("data-pos",i.offsetTop),!t){const t=null==e.columnHeaderNames?this.gridColumnNames.map((e=>e.headerName)):e.columnHeaderNames.map((e=>e.columnName)),i=[],a=`width:${100/t.length}%`;if(null==e.columnHeaderNames)for(let e=0;e<t.length;e++)i.push({data:t[e],headerName:t[e],width:a});else for(let t=0;t<e.columnHeaderNames.length;t++)i.push({data:e.columnHeaderNames[t].columnName,headerName:e.columnHeaderNames[t].columnNameDisplay??e.columnHeaderNames[t].columnName,width:e.columnHeaderNames[t].columnWidth?`min-width:${e.columnHeaderNames[t].columnWidth}px`:a,format:e.columnHeaderNames[t].format});this.headerData=i}i.innerHTML=this.headerData.map((e=>`<div class='opengridjs-grid-header-item' draggable="true" data-header='${e.data}' style='${e.width}'>${e.headerName}<span class='opengridjs-sort-indicator'></span></div>`)).join("");const a=Array.from(i.getElementsByClassName("opengridjs-grid-header-item"));var r=0;a.forEach((e=>{const t=this.headerData.find((t=>t.data==e.getAttribute("data-header"))).sortDirection;t&&e.classList.add("asc"===t?"opengridjs-sort-asc":"opengridjs-sort-desc"),e.setAttribute("data-order",r++),e.addEventListener("dragenter",(e=>this.dragOver(e)))}))}dragOver(e){if(e.preventDefault(),e.relatedTarget&&e.relatedTarget.classList.contains("opengridjs-grid-header-item")&&!e.target.classList.contains("opengridjs-sort-indicator")){const t=e.relatedTarget.getAttribute("data-order"),i=e.target.getAttribute("data-order"),a=this.headerData[t];this.headerData[t]=this.headerData[i],this.headerData[i]=a,this.generateGridHeader(null,this.headerData),this.rerender()}}generateGridRows(){const e=this.rootElement.querySelector(".opengridjs-grid-rows-container");e.style.height=`${this.gridRowPxVisibleArea}px`,e.innerHTML="<div class='opengridjs-grid-rows'></div>";const t=this.rootElement.querySelector(".opengridjs-grid-rows");t.style.height=this.gridRowPxSize*this.gridData.length+"px",this.renderVisible(e,t)}rerender(){this.filteredData?this.processData(this.filteredData.map((e=>e.data))):this.processData(this.gridData.map((e=>e.data))),this.generateGridRows()}renderVisible(e,t){const i=e.scrollTop,a=this.gridData.filter((e=>!1===e.isRendered&&e.position>=i&&e.position<=i+this.gridRowPxVisibleArea)),r=this.gridData.filter((e=>!0===e.isRendered&&e.position<i-2*this.gridRowPxSize||e.position>i+this.gridRowPxVisibleArea));a.forEach((e=>{this.addRow(t,e)})),r.forEach((e=>{this.removeRow(e)})),this.createContextMenu(this.contextMenuItems)}addRow(e,t){t.isRendered=!0;const i=`opengridjs-grid-row-${t.position}`;e.innerHTML+=`<div data-id='${t.data.id}' class='opengridjs-grid-row ${i}' style='top:${t.position}px'></div>`;e.getElementsByClassName(i)[0].innerHTML=this.headerData.map((e=>{let i="&nbsp;";if(e.data.includes(".")){const a=e.data.split(".");i=t.data,a.forEach((e=>{i=i[e]}))}else i=t.data[e.data]??"&nbsp;";var a=e.format;return a&&(i=a(i)),`<div class='opengridjs-grid-column-item' style='${e.width}'>${i}</div>`})).join("")}removeRow(e){e.isRendered=!1;const t=`opengridjs-grid-row-${e.position}`,i=document.querySelector(`.${t}`);i&&i.remove()}addEventListeners(e){const t=this.rootElement.querySelector(".opengridjs-grid-rows-container"),i=this.debounce((()=>{this.isNearBottom(t)&&this.canLoadMoreData&&!this.isLoadingMoreData&&(this.isLoadingMoreData=!0,this.loadMoreDataFunction((()=>{this.isLoadingMoreData=!1})))}),300);t.addEventListener("scroll",i),t.addEventListener("scroll",(()=>{this.rerender(),this.closeContextMenu(),this.isNearBottom(t)&&this.canLoadMoreData&&this.loadMoreDataFunction&&this.loadMoreDataFunction()})),this.addHeaderActions()}addHeaderActions(){const e=this.rootElement.querySelector(".opengridjs-grid-header");e.addEventListener("click",(t=>{const i=t.target.getAttribute("data-header"),a=this.headerData.find((e=>e.data==i));if(a){a.sortDirection=null==a.sortDirection||"desc"==a.sortDirection?"asc":"desc";const t=a.sortDirection;this.sortState={header:i,sortDirection:t};Array.from(e.getElementsByClassName("opengridjs-grid-header-item")).forEach((e=>{e.classList.remove("opengridjs-sort-asc","opengridjs-sort-desc"),e.getAttribute("data-header")===i&&e.classList.add("asc"===t?"opengridjs-sort-asc":"opengridjs-sort-desc")})),this.sortData(),this.rerender(),this.closeContextMenu()}}))}sortData(){this.gridData.sort(((e,t)=>(e=e.data[this.sortState.header],t=t.data[this.sortState.header],null==e?null==t?0:-1:null==t?1:"asc"==this.sortState.sortDirection?e>t?1:e<t?-1:0:"desc"==this.sortState.sortDirection?e>t?-1:e<t?1:0:void 0)))}searchFilter(e){const t=this.originalData.filter((t=>Object.values(t).some((t=>t.toString().toLowerCase().includes(e.toString().toLowerCase())))));this.processData(t),this.rerender()}reset(){this.processData(this.originalData),this.rerender()}createContextMenu(e){if(e){this.rootElement.querySelectorAll(".opengridjs-grid-row").forEach((t=>{"true"!==t.getAttribute("data-has-context-menu")&&(t.addEventListener("contextmenu",(i=>{i.preventDefault(),this.closeContextMenu(),t.classList.add("opengridjs-selected-grid-row"),t.setAttribute("data-has-context-menu","true");const a=t.getAttribute("data-id");if("undefined"===a)return void console.error("No Id detected in the selected row");this.gridSelectedObject=this.gridData.find((e=>e.data.id===a)).data;const r=this.contextMenuTitle??"Title",s=`\n                <div class="opengridjs-contextMenu" style="left:${`${i.pageX}px`}; top: ${`${i.pageY}px`}">\n                    <div class="opengridjs-title">${r}</div><hr/>\n                    ${e.map(((e,t)=>`<button data-id="${a}" class="opengridjs-context-menu-button ${e.className} opengridjs-btn" data-action="${e.actionFunctionName}">${e.actionName}</button>`)).join("")}\n                    <br/>&nbsp;\n                </div>`;document.querySelector(".opengridjs-grid-additional").innerHTML+=s,document.querySelectorAll(".opengridjs-context-menu-button").forEach((e=>{e.addEventListener("click",(e=>{const t=e.target.getAttribute("data-action");window[t](this.gridSelectedObject),this.closeContextMenu()}))}))})),t.addEventListener("click",(()=>this.closeContextMenu())))}))}}exportToCSV(){const e=this.gridData.map((e=>e.data)),t=(e,t)=>null===t?"":t,i=Object.keys(e[0]);let a=e.map((e=>i.map((i=>JSON.stringify(e[i],t))).join(",")));a.unshift(i.join(",")),a=a.join("\r\n");const r=new Blob([a],{type:"text/csv;charset=utf-8;"}),s=URL.createObjectURL(r),o=document.createElement("a");o.href=s,o.setAttribute("download","export.csv"),document.body.appendChild(o),o.click(),document.body.removeChild(o)}closeContextMenu(e){document.querySelectorAll(".opengridjs-contextMenu").forEach((e=>e.remove())),document.querySelectorAll(".opengridjs-selected-grid-row").forEach((e=>e.classList.remove("opengridjs-selected-grid-row"))),e&&e(this.gridSelectedObject)}isNearBottom(e){return!(e.scrollHeight!=e.scrollTop+this.gridRowPxVisibleArea+4||this.loadedAtGridHeight.includes(e.scrollTop))&&(this.loadedAtGridHeight.push(e.scrollTop),!0)}appendData(e){"function"==typeof e?e().then((e=>{e&&e.length>0?(this.originalData=[...this.originalData,...e],this.processData(this.originalData),this.rerender()):this.canLoadMoreData=!1})):e&&e.length>0?(this.originalData=[...this.originalData,...e],this.processData(this.originalData),this.rerender()):this.canLoadMoreData=!1}updateData(e){"function"==typeof e?e().then((e=>{this.originalData=e,this.processData(this.originalData),this.rerender()})):(this.originalData=e,this.processData(this.originalData),this.rerender())}stopLoadingMoreData(){this.canLoadMoreData=!1}}