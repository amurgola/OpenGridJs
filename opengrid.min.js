class OpenGrid{loadMoreDataFunction=null;canLoadMoreData=!0;isLoadingMoreData=!1;loadedAtGridHeight=[];constructor(e,t,i,a,r=null){this.className=e,this.sortState={column:null,direction:null},this.gridData=[],this.headerData=[],this.gridRowPxSize=35,this.gridRowPxVisibleArea=i,this.gridSelectedObject={},this.contextMenuItems=a.contextMenuOptions,this.contextMenuTitle=a.contextMenuTitle,this.loadMoreDataFunction=r,this.rootElement=document.querySelector(`.${e}`),this.rootElement.gridInstance=this,this.rootElement.classList.add("opengridjs-grid"),"function"==typeof t?t().then(e=>{this.originalData=JSON.parse(JSON.stringify(e)),e.length>0&&(this.gridColumnNames=Object.keys(e[0]).map(e=>({headerName:e,field:e}))),this.initGrid(),this.processData(e),this.generateGridHeader(a),this.generateGridRows(),this.addEventListeners(a)}):(this.originalData=JSON.parse(JSON.stringify(t)),t.length>0&&(this.gridColumnNames=Object.keys(t[0]).map(e=>({headerName:e,field:e}))),this.initGrid(),this.processData(t),this.generateGridHeader(a),this.generateGridRows(),this.addEventListeners(a))}debounce(e,t){let i;return function(){let a=this,r=arguments;clearTimeout(i),i=setTimeout(()=>e.apply(a,r),t)}}initGrid(){this.rootElement.classList.add("opengridjs-grid-container"),this.rootElement.innerHTML=`
        <div class='opengridjs-grid-additional'></div>
        <div class='opengridjs-grid-header'></div>
        <div class='opengridjs-grid-rows-container'></div>`}processData(e){this.gridData=e.map((e,t)=>({data:e,position:t*this.gridRowPxSize,isRendered:!1})),this.sortData()}generateGridHeader(e){let t=this.rootElement.querySelector(".opengridjs-grid-header");t.setAttribute("data-pos",t.offsetTop);let i=null==e.columnHeaderNames?this.gridColumnNames.map(e=>e.headerName):e.columnHeaderNames.map(e=>e.columnName),a=[],r=100/i.length,s=`width:${r}%`;if(null==e.columnHeaderNames)for(let o=0;o<i.length;o++)a.push({data:i[o],headerName:i[o],width:s});else for(let n=0;n<e.columnHeaderNames.length;n++)a.push({data:e.columnHeaderNames[n].columnName,headerName:e.columnHeaderNames[n].columnNameDisplay??e.columnHeaderNames[n].columnName,width:e.columnHeaderNames[n].columnWidth?`min-width:${e.columnHeaderNames[n].columnWidth}px`:s,format:e.columnHeaderNames[n].format});this.headerData=a,t.innerHTML=this.headerData.map(e=>`<div class='opengridjs-grid-header-item' data-header='${e.data}' style='${e.width}'>${e.headerName}<span class='opengridjs-sort-indicator'></span></div>`).join("")}generateGridRows(){let e=this.rootElement.querySelector(".opengridjs-grid-rows-container");e.style.height=`${this.gridRowPxVisibleArea}px`,e.innerHTML="<div class='opengridjs-grid-rows'></div>";let t=this.rootElement.querySelector(".opengridjs-grid-rows");t.style.height=`${this.gridRowPxSize*this.gridData.length}px`,this.renderVisible(e,t)}rerender(){this.filteredData?this.processData(this.filteredData.map(e=>e.data)):this.processData(this.gridData.map(e=>e.data)),this.generateGridRows()}renderVisible(e,t){let i=e.scrollTop,a=this.gridData.filter(e=>!1===e.isRendered&&e.position>=i&&e.position<=i+this.gridRowPxVisibleArea),r=this.gridData.filter(e=>!0===e.isRendered&&e.position<i-2*this.gridRowPxSize||e.position>i+this.gridRowPxVisibleArea);a.forEach(e=>{this.addRow(t,e)}),r.forEach(e=>{this.removeRow(e)}),this.createContextMenu(this.contextMenuItems)}addRow(e,t){t.isRendered=!0;let i=`opengridjs-grid-row-${t.position}`;e.innerHTML+=`<div data-id='${t.data.id}' class='opengridjs-grid-row ${i}' style='top:${t.position}px'></div>`;let a=e.getElementsByClassName(i)[0];a.innerHTML=this.headerData.map(e=>{let i=t.data[e.data]??"&nbsp;";var a=e.format;return a&&(i=a(i)),`<div class='opengridjs-grid-column-item' style='${e.width}'>${i}</div>`}).join("")}removeRow(e){e.isRendered=!1;let t=`opengridjs-grid-row-${e.position}`,i=document.querySelector(`.${t}`);i&&i.remove()}addEventListeners(e){let t=this.rootElement.querySelector(".opengridjs-grid-rows-container"),i=this.debounce(()=>{this.isNearBottom(t)&&this.canLoadMoreData&&!this.isLoadingMoreData&&(this.isLoadingMoreData=!0,this.loadMoreDataFunction(()=>{this.isLoadingMoreData=!1}))},300);t.addEventListener("scroll",i),t.addEventListener("scroll",()=>{this.rerender(),this.closeContextMenu(),this.isNearBottom(t)&&this.canLoadMoreData&&this.loadMoreDataFunction&&this.loadMoreDataFunction()}),this.createContextMenu(e.contextMenuOptions),this.addHeaderActions()}addHeaderActions(){let e=this.rootElement.querySelector(".opengridjs-grid-header");e.addEventListener("click",t=>{let i=t.target.getAttribute("data-header"),a=this.headerData.find(e=>e.data==i);if(a){a.sortDirection=null==a.sortDirection||"desc"==a.sortDirection?"asc":"desc";let r=a.sortDirection;this.sortState={header:i,sortDirection:r};let s=Array.from(e.getElementsByClassName("opengridjs-grid-header-item"));s.forEach(e=>{e.classList.remove("opengridjs-sort-asc","opengridjs-sort-desc"),e.getAttribute("data-header")===i&&e.classList.add("asc"===r?"opengridjs-sort-asc":"opengridjs-sort-desc")}),this.sortData(),this.rerender(),this.closeContextMenu()}})}sortData(){this.gridData.sort((e,t)=>(e=e.data[this.sortState.header],t=t.data[this.sortState.header],null==e)?null==t?0:-1:null==t?1:"asc"==this.sortState.sortDirection?e>t?1:e<t?-1:0:"desc"==this.sortState.sortDirection?e>t?-1:e<t?1:0:void 0)}searchFilter(e){let t=this.originalData.filter(t=>Object.values(t).some(t=>t.toString().toLowerCase().includes(e.toString().toLowerCase())));this.processData(t),this.rerender()}reset(){this.processData(this.originalData),this.rerender()}createContextMenu(e){if(e){let t=this.rootElement.querySelectorAll(".opengridjs-grid-row");t.forEach(t=>{t.addEventListener("contextmenu",i=>{i.preventDefault(),this.closeContextMenu(),t.classList.add("opengridjs-selected-grid-row");let a=t.getAttribute("data-id");this.gridSelectedObject=this.gridData.find(e=>e.data.id==a).data;let r=this.contextMenuTitle??"Title",s=`${i.pageX}px`,o=`${i.pageY}px`,n=`
                    <div class="opengridjs-contextMenu" style="left:${s}; top: ${o}">
                        <div class="opengridjs-title">${r}</div><hr/>
                        ${e.map((e,t)=>`<button data-id="${a}" class="opengridjs-context-menu-button ${e.className} opengridjs-btn" data-action="${e.actionFunctionName}">${e.actionName}</button>`).join("")}
                        <br/>&nbsp;
                    </div>`;document.querySelector(".opengridjs-grid-additional").innerHTML+=n,document.querySelectorAll(".opengridjs-context-menu-button").forEach(e=>{e.addEventListener("click",e=>{let t=e.target.getAttribute("data-action");window[t](this.gridSelectedObject),this.closeContextMenu()})})}),t.addEventListener("click",()=>this.closeContextMenu())})}}exportToCSV(){let e=this.gridData.map(e=>e.data),t=(e,t)=>null===t?"":t,i=Object.keys(e[0]),a=e.map(e=>i.map(i=>JSON.stringify(e[i],t)).join(","));a.unshift(i.join(",")),a=a.join("\r\n");let r=new Blob([a],{type:"text/csv;charset=utf-8;"}),s=URL.createObjectURL(r),o=document.createElement("a");o.href=s,o.setAttribute("download","export.csv"),document.body.appendChild(o),o.click(),document.body.removeChild(o)}closeContextMenu(e){document.querySelectorAll(".opengridjs-contextMenu").forEach(e=>e.remove()),document.querySelectorAll(".opengridjs-selected-grid-row").forEach(e=>e.classList.remove("opengridjs-selected-grid-row")),e&&e(this.gridSelectedObject)}isNearBottom(e){return!(e.scrollHeight!=e.scrollTop+this.gridRowPxVisibleArea+4||this.loadedAtGridHeight.includes(e.scrollTop))&&(this.loadedAtGridHeight.push(e.scrollTop),!0)}appendData(e){"function"==typeof e?e().then(e=>{e&&e.length>0?(this.originalData=[...this.originalData,...e],this.processData(this.originalData),this.rerender()):this.canLoadMoreData=!1}):e&&e.length>0?(this.originalData=[...this.originalData,...e],this.processData(this.originalData),this.rerender()):this.canLoadMoreData=!1}updateData(e){"function"==typeof e?e().then(e=>{this.originalData=e,this.processData(this.originalData),this.rerender()}):(this.originalData=e,this.processData(this.originalData),this.rerender())}stopLoadingMoreData(){this.canLoadMoreData=!1}}