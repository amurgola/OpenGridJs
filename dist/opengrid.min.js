class OpenGrid{loadMoreDataFunction=null;canLoadMoreData=!0;isLoadingMoreData=!1;loadedAtGridHeight=[];constructor(e,t,i,r={},s=null){this.className=e,this.sortState={column:null,direction:null},this.gridData=[],this.headerData=[],this.gridRowPxSize=35,this.gridRowPxVisibleArea=i,this.gridSelectedObject={},this.contextMenuItems=r.contextMenuOptions,this.contextMenuTitle=r.contextMenuTitle,this.loadMoreDataFunction=s,this.columnFilters={},this.filteredData=null,this.rootElement=document.querySelector(`.${e}`),this.rootElement.gridInstance=this,this.rootElement.classList.add("opengridjs-grid"),"function"==typeof t?t().then(e=>{this.originalData=JSON.parse(JSON.stringify(e)),e.length>0&&(this.gridColumnNames=Object.keys(e[0]).map(e=>({headerName:e,field:e}))),this.initGrid(),this.processData(e),this.generateGridHeader(r),this.generateGridRows(),this.addEventListeners(r)}):(this.originalData=JSON.parse(JSON.stringify(t)),t.length>0&&(this.gridColumnNames=Object.keys(t[0]).map(e=>({headerName:e,field:e}))),this.initGrid(),this.processData(t),this.generateGridHeader(r),this.generateGridRows(),this.addEventListeners(r),setTimeout(()=>this.updateColumnWidths(),0))}debounce(e,t){let i;return function(){const r=this,s=arguments;clearTimeout(i),i=setTimeout(()=>e.apply(r,s),t)}}generateGUID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>{const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}initGrid(){this.rootElement.classList.add("opengridjs-grid-container"),this.rootElement.innerHTML="\n        <div class='opengridjs-grid-additional'></div>\n        <div class='opengridjs-grid-header'></div>\n        <div class='opengridjs-grid-rows-container'></div>"}processData(e){this.gridData=e.map((e,t)=>(void 0!==e.id&&null!==e.id&&""!==e.id||(e.id=this.generateGUID()),{data:e,position:t*this.gridRowPxSize,isRendered:!1})),this.sortData(),this.createContextMenu(this.contextMenuItems)}generateGridHeader(e,t){const i=this.rootElement.querySelector(".opengridjs-grid-header");if(i.setAttribute("data-pos",i.offsetTop),!t){const t=null==e.columnHeaderNames?(this.gridColumnNames||[]).map(e=>e.headerName):e.columnHeaderNames.map(e=>e.columnName),i=[],r=`width:${100/t.length}%`;if(null==e.columnHeaderNames)for(let e=0;e<t.length;e++)i.push({data:t[e],headerName:t[e],width:r});else for(let t=0;t<e.columnHeaderNames.length;t++)i.push({data:e.columnHeaderNames[t].columnName,headerName:e.columnHeaderNames[t].columnNameDisplay??e.columnHeaderNames[t].columnName,width:e.columnHeaderNames[t].columnWidth?`min-width:${e.columnHeaderNames[t].columnWidth}`:r,format:e.columnHeaderNames[t].format});this.headerData=i}i.innerHTML=this.headerData.map(e=>{if(!e||!e.width)return console.warn("Invalid header data:",e),"";const t=this.getColumnStyle(e);return`<div class='opengridjs-grid-header-item' draggable="true" data-header='${e.data}' style='${t}'>\n                <span class='opengridjs-header-text'>${e.headerName}</span>\n                <span class='opengridjs-header-actions'>\n                    <span class='opengridjs-filter-button' data-column='${e.data}' title='Filter'>â–¼</span>\n                    <span class='opengridjs-sort-indicator'></span>\n                </span>\n                <span class='opengridjs-resize-handle'></span>\n            </div>`}).filter(e=>""!==e).join("");const r=Array.from(i.getElementsByClassName("opengridjs-grid-header-item"));var s=0;r.forEach(e=>{const t=this.headerData.find(t=>t.data==e.getAttribute("data-header")).sortDirection;t&&e.classList.add("asc"===t?"opengridjs-sort-asc":"opengridjs-sort-desc"),e.setAttribute("data-order",s++),e.addEventListener("dragenter",e=>this.dragOver(e));const i=e.querySelector(".opengridjs-resize-handle");i&&this.addResizeHandleEvents(i,e)})}dragOver(e){if(e.preventDefault(),e.relatedTarget&&e.relatedTarget.classList.contains("opengridjs-grid-header-item")&&!e.target.classList.contains("opengridjs-sort-indicator")){const t=parseInt(e.relatedTarget.getAttribute("data-order")),i=parseInt(e.target.getAttribute("data-order"));if(isNaN(t)||isNaN(i)||t<0||i<0||t>=this.headerData.length||i>=this.headerData.length||!this.headerData[t]||!this.headerData[i])return;const r=this.headerData[t];this.headerData[t]=this.headerData[i],this.headerData[i]=r,this.generateGridHeader(null,this.headerData),this.rerender()}}addResizeHandleEvents(e,t){let i=!1,r=0,s=0,n=0,a=!1;e.addEventListener("mousedown",e=>{e.preventDefault(),e.stopPropagation(),i=!0,r=e.clientX,s=t.offsetWidth,n=parseInt(t.getAttribute("data-order")),t.classList.add("opengridjs-resizing"),t.setAttribute("draggable","false"),document.addEventListener("mousemove",o),document.addEventListener("mouseup",d)}),e.addEventListener("dblclick",e=>{e.preventDefault(),e.stopPropagation(),this.autoResizeColumns()});const o=e=>{if(!i)return;const a=e.clientX-r,o=this.headerData[n].contentMinWidth||80,d=Math.max(o,s+a);this.headerData[n].width=`min-width:${d}px`,t.style.width=`${d}px`,t.style.flexGrow="0",t.style.flexShrink="0",this.updateColumnWidths()},d=()=>{i&&(a=!0,i=!1,t.classList.remove("opengridjs-resizing"),t.setAttribute("draggable","true"),document.removeEventListener("mousemove",o),document.removeEventListener("mouseup",d),this.rerender(),setTimeout(()=>{a=!1},10))};t._wasResizing=()=>a}updateColumnWidths(){this.calculateContentMinWidths();this.rootElement.querySelectorAll(".opengridjs-grid-row").forEach(e=>{e.querySelectorAll(".opengridjs-grid-column-item").forEach((e,t)=>{if(this.headerData[t]){const i=this.getColumnStyle(this.headerData[t]);e.style.cssText=i}})}),this.updateHeaderWidths()}calculateContentMinWidths(){const e=this.rootElement.querySelectorAll(".opengridjs-grid-row"),t=this.rootElement.querySelectorAll(".opengridjs-grid-header-item");this.headerData.forEach((i,r)=>{let s=0;if(t[r]){const e=t[r].querySelector(".opengridjs-header-text");if(e){const t=this.measureTextWidth(e.textContent,e);s=Math.max(s,t+60)}}const n=Math.min(10,e.length);for(let t=0;t<n;t++){const i=e[t].querySelectorAll(".opengridjs-grid-column-item")[r];if(i){const e=this.measureTextWidth(i.textContent,i);s=Math.max(s,e+32)}}i.contentMinWidth=Math.max(80,s)})}measureTextWidth(e,t){try{const i=document.createElement("canvas").getContext("2d");if(!i)throw new Error("Canvas context not available");const r=window.getComputedStyle(t);i.font=`${r.fontWeight} ${r.fontSize} ${r.fontFamily}`;const s=i.measureText(e||"");return Math.ceil(s.width)}catch(i){return this.estimateTextWidth(e,t)}}estimateTextWidth(e,t){const i=document.createElement("span");if(i.style.position="absolute",i.style.visibility="hidden",i.style.whiteSpace="nowrap",i.style.pointerEvents="none",t&&window.getComputedStyle){const e=window.getComputedStyle(t);i.style.font=e.font,i.style.fontSize=e.fontSize,i.style.fontFamily=e.fontFamily,i.style.fontWeight=e.fontWeight}else i.style.fontSize="14px",i.style.fontFamily="Arial, sans-serif",i.style.fontWeight="normal";i.textContent=e||"",document.body.appendChild(i);let r=i.offsetWidth;if(document.body.removeChild(i),0===r&&e){const t=7;r=e.length*t}return r}updateHeaderWidths(){this.rootElement.querySelectorAll(".opengridjs-grid-header-item").forEach((e,t)=>{if(this.headerData[t]){const i=this.getColumnStyle(this.headerData[t]);e.style.cssText=i}})}getColumnStyle(e){let t=e.width,i="";return e.contentMinWidth&&(i=`min-width: ${e.contentMinWidth}px; `),e.width.includes("min-width")||e.width.includes("width:")?`${i}${t}; flex-grow: 0; flex-shrink: 0; box-sizing: border-box;`:`${i}${t}; box-sizing: border-box;`}autoResizeColumns(){const e=this.rootElement.querySelector(".opengridjs-grid-header");if(!e)return;const t=e.offsetWidth,i=this.headerData.length,r=Math.floor(t/i);this.headerData.forEach((e,t)=>{e&&(e.width=`width:${r}px`)}),this.generateGridHeader(null,this.headerData),this.rerender()}generateGridRows(){const e=this.rootElement.querySelector(".opengridjs-grid-rows-container");e.style.height=`${this.gridRowPxVisibleArea}px`,e.innerHTML="<div class='opengridjs-grid-rows'></div>";const t=this.rootElement.querySelector(".opengridjs-grid-rows");t.style.height=this.gridRowPxSize*this.gridData.length+"px",this.renderVisible(e,t)}rerender(){this.filteredData?this.processData(this.filteredData):this.processData(this.gridData.map(e=>e.data)),this.generateGridRows()}renderVisible(e,t){const i=e.scrollTop,r=this.gridData.filter(e=>!1===e.isRendered&&e.position>=i&&e.position<=i+this.gridRowPxVisibleArea),s=this.gridData.filter(e=>!0===e.isRendered&&e.position<i-2*this.gridRowPxSize||e.position>i+this.gridRowPxVisibleArea);r.forEach(e=>{this.addRow(t,e)}),s.forEach(e=>{this.removeRow(e)}),this.createContextMenu(this.contextMenuItems)}addRow(e,t){t.isRendered=!0;const i=`opengridjs-grid-row-${t.position}`;e.innerHTML+=`<div data-id='${t.data.id}' class='opengridjs-grid-row ${i}' style='top:${t.position}px'></div>`;e.getElementsByClassName(i)[0].innerHTML=this.headerData.map(e=>{let i="&nbsp;";if(e.data.includes(".")){const r=e.data.split(".");i=t.data,r.forEach(e=>{i=i[e]})}else i=t.data[e.data]??"&nbsp;";var r=e.format;r&&(i=r(i));return`<div class='opengridjs-grid-column-item' style='${this.getColumnStyle(e)}'>${i}</div>`}).join("")}removeRow(e){e.isRendered=!1;const t=`opengridjs-grid-row-${e.position}`,i=document.querySelector(`.${t}`);i&&i.remove()}addEventListeners(e){const t=this.rootElement.querySelector(".opengridjs-grid-rows-container"),i=this.debounce(()=>{this.isNearBottom(t)&&this.canLoadMoreData&&!this.isLoadingMoreData&&(this.isLoadingMoreData=!0,this.loadMoreDataFunction(()=>{this.isLoadingMoreData=!1}))},300);t.addEventListener("scroll",i),t.addEventListener("scroll",()=>{this.rerender(),this.closeContextMenu(),this.isNearBottom(t)&&this.canLoadMoreData&&this.loadMoreDataFunction&&this.loadMoreDataFunction()}),this.addHeaderActions()}addHeaderActions(){const e=this.rootElement.querySelector(".opengridjs-grid-header");e.addEventListener("click",t=>{if(t.target.classList.contains("opengridjs-filter-button"))return t.stopPropagation(),void this.toggleFilterMenu(t.target);const i=t.target.closest(".opengridjs-grid-header-item");if(i&&i._wasResizing&&i._wasResizing())return;const r=t.target.getAttribute("data-header")||t.target.closest(".opengridjs-grid-header-item")?.getAttribute("data-header"),s=this.headerData.find(e=>e.data==r);if(s){s.sortDirection=null==s.sortDirection||"desc"==s.sortDirection?"asc":"desc";const t=s.sortDirection;this.sortState={header:r,sortDirection:t};Array.from(e.getElementsByClassName("opengridjs-grid-header-item")).forEach(e=>{e.classList.remove("opengridjs-sort-asc","opengridjs-sort-desc"),e.getAttribute("data-header")===r&&e.classList.add("asc"===t?"opengridjs-sort-asc":"opengridjs-sort-desc")}),Object.keys(this.columnFilters).length>0?this.applyAllFilters():(this.sortData(),this.rerender()),this.closeContextMenu()}})}sortData(){this.sortState.header&&(this.gridData.sort((e,t)=>(e=e.data[this.sortState.header],t=t.data[this.sortState.header],null==e?null==t?0:-1:null==t?1:"asc"==this.sortState.sortDirection?e>t?1:e<t?-1:0:"desc"==this.sortState.sortDirection?e>t?-1:e<t?1:0:void 0)),this.gridData.forEach((e,t)=>{e.position=t*this.gridRowPxSize,e.isRendered=!1}))}searchFilter(e){const t=this.originalData.filter(t=>Object.values(t).some(t=>t.toString().toLowerCase().includes(e.toString().toLowerCase())));this.processData(t),this.rerender()}reset(){this.processData(this.originalData),this.rerender()}createContextMenu(e){if(e){this.rootElement.querySelectorAll(".opengridjs-grid-row").forEach(t=>{"true"!==t.getAttribute("data-has-context-menu")&&(t.addEventListener("contextmenu",i=>{i.preventDefault(),this.closeContextMenu(),t.classList.add("opengridjs-selected-grid-row"),t.setAttribute("data-has-context-menu","true");const r=t.getAttribute("data-id");if("undefined"===r)return void console.error("No Id detected in the selected row");this.gridSelectedObject=this.gridData.find(e=>e.data.id.toString()===r).data;const s=this.contextMenuTitle??"Title",n=this.rootElement.getBoundingClientRect(),a=`\n                <div class="opengridjs-contextMenu" style="left:${i.clientX-n.left+"px"}; top: ${i.clientY-n.top+"px"}">\n                    <div class="opengridjs-title">${s}</div><hr/>\n                    ${e.map((e,t)=>`<button data-id="${r}" class="opengridjs-context-menu-button ${e.className} opengridjs-btn" data-action="${e.actionFunctionName}">${e.actionName}</button>`).join("")}\n                    <br/>&nbsp;\n                </div>`;document.querySelector(".opengridjs-grid-additional").innerHTML+=a,document.querySelectorAll(".opengridjs-context-menu-button").forEach(e=>{e.addEventListener("click",e=>{const t=e.target.getAttribute("data-action");window[t](this.gridSelectedObject),this.closeContextMenu()})})}),t.addEventListener("click",()=>this.closeContextMenu()))})}}exportToCSV(){const e=this.gridData.map(e=>e.data),t=(e,t)=>null===t?"":t,i=Object.keys(e[0]);let r=e.map(e=>i.map(i=>JSON.stringify(e[i],t)).join(","));r.unshift(i.join(",")),r=r.join("\r\n");const s=new Blob([r],{type:"text/csv;charset=utf-8;"}),n=URL.createObjectURL(s),a=document.createElement("a");a.href=n,a.setAttribute("download","export.csv"),document.body.appendChild(a),a.click(),document.body.removeChild(a)}closeContextMenu(e){document.querySelectorAll(".opengridjs-contextMenu").forEach(e=>e.remove()),document.querySelectorAll(".opengridjs-selected-grid-row").forEach(e=>e.classList.remove("opengridjs-selected-grid-row")),e&&e(this.gridSelectedObject)}isNearBottom(e){return!(e.scrollHeight!=e.scrollTop+this.gridRowPxVisibleArea+4||this.loadedAtGridHeight.includes(e.scrollTop))&&(this.loadedAtGridHeight.push(e.scrollTop),!0)}appendData(e){"function"==typeof e?e().then(e=>{e&&e.length>0?(this.originalData=[...this.originalData,...e],this.processData(this.originalData),this.rerender()):this.canLoadMoreData=!1}):e&&e.length>0?(this.originalData=[...this.originalData,...e],this.processData(this.originalData),this.rerender()):this.canLoadMoreData=!1}updateData(e){"function"==typeof e?e().then(e=>{this.originalData=e,this.processData(this.originalData),this.rerender()}):(this.originalData=e,this.processData(this.originalData),this.rerender())}stopLoadingMoreData(){this.canLoadMoreData=!1}toggleFilterMenu(e){const t=e.getAttribute("data-column"),i=document.querySelector(".opengridjs-filter-menu");i&&i.getAttribute("data-column")===t?i.remove():(i&&i.remove(),this.showFilterMenu(e,t))}showFilterMenu(e,t){const i=this.getUniqueColumnValues(t),r=this.columnFilters[t]||new Set(i),s=document.createElement("div");s.className="opengridjs-filter-menu",s.setAttribute("data-column",t);const n=e.getBoundingClientRect(),a=this.rootElement.getBoundingClientRect();s.style.position="absolute",s.style.left=n.left-a.left+"px",s.style.top=n.bottom-a.top+"px",s.style.zIndex="1000";let o='\n            <div class="opengridjs-filter-menu-header">\n                <button class="opengridjs-filter-select-all">Select All</button>\n                <button class="opengridjs-filter-clear-all">Clear All</button>\n            </div>\n            <div class="opengridjs-filter-search">\n                <input type="text" placeholder="Search..." class="opengridjs-filter-search-input">\n            </div>\n            <div class="opengridjs-filter-options">';i.forEach(e=>{const t=null==e||""===e?"(Empty)":e,i=r.has(e);o+=`\n                <label class="opengridjs-filter-option">\n                    <input type="checkbox" value="${this.escapeHtml(String(e))}" ${i?"checked":""}>\n                    <span>${this.escapeHtml(String(t))}</span>\n                </label>`}),o+='\n            </div>\n            <div class="opengridjs-filter-menu-footer">\n                <button class="opengridjs-filter-apply">Apply</button>\n                <button class="opengridjs-filter-cancel">Cancel</button>\n            </div>',s.innerHTML=o,this.rootElement.querySelector(".opengridjs-grid-additional").appendChild(s),this.attachFilterMenuEvents(s,t,i),setTimeout(()=>{document.addEventListener("click",this.closeFilterMenuOnClickOutside)},0)}attachFilterMenuEvents(e,t,i){e.querySelector(".opengridjs-filter-select-all").addEventListener("click",()=>{e.querySelectorAll(".opengridjs-filter-option input").forEach(e=>{e.checked=!0})}),e.querySelector(".opengridjs-filter-clear-all").addEventListener("click",()=>{e.querySelectorAll(".opengridjs-filter-option input").forEach(e=>{e.checked=!1})});e.querySelector(".opengridjs-filter-search-input").addEventListener("input",t=>{const i=t.target.value.toLowerCase();e.querySelectorAll(".opengridjs-filter-option").forEach(e=>{const t=e.querySelector("span").textContent.toLowerCase();e.style.display=t.includes(i)?"flex":"none"})}),e.querySelector(".opengridjs-filter-apply").addEventListener("click",()=>{const r=new Set;e.querySelectorAll(".opengridjs-filter-option input:checked").forEach(e=>{const t=e.value,s=i.find(e=>String(e)===t);r.add(s)}),this.applyColumnFilter(t,r),e.remove(),document.removeEventListener("click",this.closeFilterMenuOnClickOutside)}),e.querySelector(".opengridjs-filter-cancel").addEventListener("click",()=>{e.remove(),document.removeEventListener("click",this.closeFilterMenuOnClickOutside)})}closeFilterMenuOnClickOutside=e=>{const t=document.querySelector(".opengridjs-filter-menu");!t||t.contains(e.target)||e.target.classList.contains("opengridjs-filter-button")||(t.remove(),document.removeEventListener("click",this.closeFilterMenuOnClickOutside))};getUniqueColumnValues(e){const t=new Set;return(this.originalData||this.gridData.map(e=>e.data)).forEach(i=>{let r=i[e];t.add(r)}),Array.from(t).sort((e,t)=>null==e?1:null==t?-1:"string"==typeof e&&"string"==typeof t?e.localeCompare(t):e>t?1:e<t?-1:0)}applyColumnFilter(e,t){t.size===this.getUniqueColumnValues(e).length?delete this.columnFilters[e]:this.columnFilters[e]=t,this.applyAllFilters(),this.updateFilterIndicators()}applyAllFilters(){let e=[...this.originalData];Object.keys(this.columnFilters).forEach(t=>{const i=this.columnFilters[t];e=e.filter(e=>i.has(e[t]))}),this.filteredData=e,this.processData(e),this.sortState&&this.sortState.header&&this.sortData(),this.rerender()}updateFilterIndicators(){this.rootElement.querySelectorAll(".opengridjs-grid-header-item").forEach(e=>{const t=e.getAttribute("data-header"),i=e.querySelector(".opengridjs-filter-button");i&&(this.columnFilters[t]&&this.columnFilters[t].size>0?i.classList.add("opengridjs-filter-active"):i.classList.remove("opengridjs-filter-active"))})}clearAllFilters(){this.columnFilters={},this.filteredData=null,this.processData(this.originalData),this.sortState&&this.sortState.header&&this.sortData(),this.rerender(),this.updateFilterIndicators()}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}}